// ___________За допомогою оператора визначення типу переконайтеся, що змінних належать типам: string, number, boolean.
​
// const str = 'qwerty';
// const num = 3.14;
// const boolean = false;
// const object = {
//     a: 1,
//     b: 'b',
//     c: true
// };
// const array = [1, 2, 3, 4, 5];
​
// ______________ а) Вивести на екран  суму: ваш вік + вік сусіда справа.
​
// let myAge = 133;
// let mentorsAge = 135;
// let result = myAge + mentorsAge;
​
// _______________б) Вивести в консоль  результат: 108+223-2*5
​
// let a;
// console.log(a = 108 + 223 - 2 * 5);
​
// __________________Определить площадь круга с радиусом 10см ( ПR(2) )
​
// (Math.pow(a, b)) - возведение в степень
​
// Math.pow(10,2)
​
// console.log(3.14 * (Math.pow(10, 2)));
​
//________________ Написать фразу с помощью интерполяции `${...}`
// "Здравствуйте, меня зовут А, мне Б лет и мне нравятся Ц" где А, Б, Ц - переменные вставленные в строку
​
// console.log(` Здравствуйте, меня зовут ${name}, мне ${number}, лет и мне нравятся ${subject} `);
//________________________
// Каким будет результат этих выражений?
​
// 5 > 4
// console.log("Ёнанас" < "ёжик");
// "2" > "12"
// undefined == null
// undefined === null
// console.log()
​
// #2
// Выведется ли alert?
​
// if ("0") {
//   alert( 'Привет' );
// }
​
// #3  IF/ELSE/?
// Используя конструкцию if..else, напишите код, который будет спрашивать: „Какое «официальное» название JavaScript?“
​
// Если пользователь вводит «ECMAScript», то показать: «Верно!», в противном случае – отобразить: «Не знаете? ECMAScript!»
​
// #4
// Перепишите if с использованием условного оператора '?':
​
// let result;
// let a = 0;
// let b = 0;
​
// if (a + b < 4) {
//   result = 'Мало';
// } else {
//   result = 'Много';
// }
​
// #5
// Перепишите if..else с использованием нескольких операторов '?'.
​
// Для читаемости рекомендуется разбить код на несколько строк.
​
// let message;
​
// if (login == 'Сотрудник') {
//   message = 'Привет';
// } else if (login == 'Директор') {
//   message = 'Здравствуйте';
// } else if (login == '') {
//   message = 'Нет логина';
// } else {
//   message = '';
// }
​
// #6 Logic Operators
// Что выведет код ниже?
​
// alert( null || 2 || undefined );
​
// #7
// Что выведет код ниже?
​
// alert( (1 && null && 2) > 0 );
​
// #8
// Что выведет код ниже?
​
// alert( null || 2 && 3 || 4 );
​
// #9
// Напишите условие if для проверки, что переменная age находится в диапазоне между 14 и 90 включительно.
​
// «Включительно» означает, что значение переменной age может быть равно 14 или 90.
​
// #10
// Какие из перечисленных ниже alert выполнятся?
​
// Какие конкретно значения будут результатами выражений в условиях if(...)?
​
// if (-1 || 0) {alert( 'first' )};
// if (-1 && 0) alert( 'second' );
// if (null || -1 && 1) alert( 'third' );
​
// #11
// Напишите код, который будет спрашивать логин с помощью prompt.
​
// Если посетитель вводит «Админ», то prompt запрашивает пароль, если ничего не введено или нажата клавиша Esc – показать «Отменено», в противном случае отобразить «Я вас не знаю».
​
// Пароль проверять так:
​
// Если введён пароль «Я главный», то выводить «Здравствуйте!»,
// Иначе – «Неверный пароль»,
// При отмене – «Отменено».
​
// #12 While/For
// Какое последнее значение выведет этот код? Почему?
​
// let i = 3;
​
// while (i) {
//  console.log(i++)
// }
​
// #13
// При помощи цикла for выведите чётные числа от 2 до 10.
​
// #14
// Напишите цикл, который предлагает prompt ввести число, большее 100.
// Если посетитель ввёл другое число – попросить ввести ещё раз, и так далее.
// Цикл должен спрашивать число пока либо посетитель не введёт число,
// большее 100, либо не нажмёт кнопку Отмена (ESC).
​
// Предполагается, что посетитель вводит только числа.
// Предусматривать обработку нечисловых строк в этой задаче необязательно.
​
​
//______________
​
// #2
// 1.Создайте массив styles с элементами «Джаз» и «Блюз».
// 2.Добавьте «Рок-н-ролл» в конец.
// 3.Замените значение в середине на «Классика». Ваш код для поиска значения
//  в середине должен работать для массивов с любой длиной.
// 4.Удалите первый элемент массива и покажите его.
// 5.Вставьте «Рэп» и «Регги» в начало массива.
// Массив по ходу выполнения операций:
​
// Джаз, Блюз
// Джаз, Блюз, Рок-н-ролл
// Джаз, Классика, Рок-н-ролл
// Классика, Рок-н-ролл
// Рэп, Регги, Классика, Рок-н-ролл
​
//_______________
​
// #4
// Вернуть отсортированную копию по алфавиту (не меняя исходный массив)
// let arr = ["HTML", "JavaScript", "CSS"];
​
// #5 Функции
// function checkAge(age) {
//     if (age > 18) {
//       return true;
//     } else {
//       return confirm('Родители разрешили?');
//     }
//   }
//   Перепишите функцию, чтобы она делала то же самое, но без if, в одну строку.
​
//   Сделайте два варианта функции checkAge:
​
//   Используя оператор ?
//   Используя оператор ||
​
// #6
// Напишите функцию min(a,b), которая возвращает меньшее из чисел a и b.
// min(2, 5) == 2
// min(3, -1) == -1
// min(1, 1) == 1
​
//
​
// #7
// а теперь максимальное число если функция принимает неограниченое к-во аргументов
​
// const max = function () {
​
// Variant1
//    console.log(Math.max(...arguments))
​
// Variant2
// let maxNum =0;
//  for(let el of [...arguments]) {
//  el > maxNum ? maxNum = el : '';
//  }
//  console.log(maxNum)
​
// }
​
// max(1,2,3,4,5,6,7,8)
​
​
//_______________
​
// #2
// Напишите функцию hello(), которая при вызове будет принимать переменную name (например, «Василий») и
// выводить строку (в нашем случае «Привет, Василий»).  В случае отсутствующего аргумента выводить «Привет, гость»
​
// const greeting = function (name = 'guest') {
// console.log(`Hello, ${name}`)
// }
​
// greeting('Nik');
​
// const greeting = (name = "guest") => {
//   console.log(`Hello, ${name}`);
// };
​
// greeting("Nik");
​
// #3
// Создайте функцию repeat(str, n), которая возвращает строку, состоящую из
//  n повторений строки str. n — по умолчанию 2, str — пустая строка
//юзайте метод Repeat
​
// #4
// здайте функцию avg() , которая будет находить среднее значение по всем своим аргументам
// (аргументы величины числовые).
​
​
//__________________
// #2
// Можно ли изменить объект, объявленный с помощью const? Как вы думаете?
​
// const user = {
//   name: "John"
// };
​
// user.name = "Pete";
​
// #3
// У нас есть объект, в котором хранятся зарплаты нашей команды:
​
// let salaries = {
//   John: 100,
//   Ann: 160,
//   Pete: 130
// }
​
// // Напишите код для суммирования всех зарплат и сохраните результат в переменной sum. Должно получиться 390.
​
// // Если объект salaries пуст, то результат должен быть 0.
//__________________
​
// #4
// Создайте функцию multiplyNumeric(obj), которая умножает все числовые свойства объекта obj на 2.
​
// let menu = {
//     width: 200,
//     height: 300,
//     title: "My menu",
//     a: 1,
//   };
​
//  const multiplyNumeric = function(obj) {
//     for(let key in obj) {
//         if(typeof obj[key]=== 'number') {
//             obj[key] *=2;
//         }
//     }
// return obj
//   }
​
// console.log(multiplyNumeric(menu))
// console.log(menu);
​
//_________________________
​
//! FizzBuzz
// Одна из самых популярных на собеседованиях задач.
// Постановка
// Требуется написать функцию, выводящую в консоль числа от 1 до n,
// где n — это целое число, которая функция принимает в качестве параметра, с такими условиями:
// вывод fizz вместо чисел, кратных 3;
// вывод buzz вместо чисел, кратных 5;
// вывод fizzbuzz вместо чисел, кратных как 3, так и 5.
​
//__________________________
​
// Напишите ф-цию, которая принимает аргументом массив обьектов и строку с названием камня.
// Ф-ция считает сколько будет стоить то к-во камней, которой записано в объекте
​
// const stones = [
//     { name: 'Изумруд', price: 1300, quantity: 4 },
//     { name: 'Бриллиант', price: 2700, quantity: 3 },
//     { name: 'Сапфир', price: 400, quantity: 7 },
//     { name: 'Щебень', price: 200, quantity: 2 },
// ];
​
​
//____________________________
​
// Создайте объект calculator (калькулятор) с тремя методами:
​
// read() (читать) запрашивает два значения и сохраняет их как свойства объекта.
// sum() (суммировать) возвращает сумму сохранённых значений.
// mul() (умножить) перемножает сохранённые значения и возвращает результат.
​
//_______________________
// Напишите 2 функции letMeSeeYourName(callback) (принимает коллл-бек ф-цию при вызове, и записывает в промт Имя),
// и greeting(name) (колл-бек принимающий имя и выдающий в консоль строку "Привет"+name)
​
//  function letMeSeeYourName(callback) {
//    let getName = prompt("Enter your name: ")
//      callback(getName);
//  }
​
//  function greeting(greetingName) {
//      alert("Hello " + greetingName)
//  }
​
//  letMeSeeYourName(greeting);
//_____________________
// #3
// Напишите функцию которая принимает 3 параметра: название, цена, колбек
// Колбек создаёт объект с товаром и выводит его в консоль
​
​
//______________________
​
// Напишите ф-цию, которая примает аргументами 2 числа,  задающих диапазон который нужно вывести в консоль
// если в числе есть 3 - в консоль вместо него выводиться "three"
// (то есть вместо 3, 13, 23 и т.д. должно быть "three")
​
//_____________________
​
// Напишите функцию sum, которая работает таким образом: sum(a)(b) = a+b.
​
// Да, именно таким образом, используя двойные круглые скобки (не опечатка).
​
// Например:
​
// const sum = function(n) {
​
// }
​
// sum(1)(2)
​
​
//____________________
​
// 1)Напишите ф-цию которая юудет создавать массив машин(оъектов).
// 2)Как только длина массива достигает 5 - масив очищается а обьекты передаються в глобальный массив всех машин.
// 3)Добавте несколько методов: скидка на машину, добавление года к названию.
​
// let carExport = [];
​
// const carFactory = function() {
// let parcel =[];
​
// const addCar = function(name, price, color) {
// parcel.push({name, price,color});
// if(parcel.length === 5) {
//   carExport = [...carExport, ...parcel.splice(0) ]
// }
// }
​
// const addYear = function(name, year) {
​
//   for(let el of parcel) {
//     el.name === name ? el.name = el.name + " " + year : '';
//   }
​
// }
​
// const showLocalCars = function() {
//   console.log(parcel);
// }
​
// return {addCar, addYear, showLocalCars}
​
// }
​
// let toyota = carFactory();
// toyota.addCar('ferrari', 1000, 'white');
​
​
//_______________________
​
​
// В представленном ниже коде мы намерены вызвать obj.go() метод 4 раза подряд.
​
// Но вызовы (1) и (2) работают иначе, чем (3) и (4). Почему?
​
// let obj, method;
​
// obj = {
//   go: function() {
//     console.log('this is:', this);
//   }
// };
​
// obj.go();
​
// (obj.go)();
​
// (method = obj.go)();
​
// console.log(obj.go || obj.stop)
​
// (obj.go() || obj.stop)();
​
​
//_______________________
​
//  Это ladder (лестница) – объект, который позволяет подниматься вверх и спускаться:
​
// let ladder = {
//   step: 0,
//   up() {
//     this.step++;
​
//   },
//   down() {
//     this.step--;
​
//   },
//   showStep: function() { // показывает текущую ступеньку
//     console.log( this.step );
​
//   }
// };
// Теперь, если нам нужно сделать несколько последовательных вызовов, мы можем выполнить это так:
​
// ladder.up();
// ladder.up();
// ladder.down();
// ladder.showStep(); // 1
// Измените код методов up, down и showStep таким образом, чтобы их вызов можно было сделать по цепочке, например так:
​
// ladder.up().up().up().showStep();
​
​
//_________________CONSTRUCTOR
​
// Cоздайте ф-ю конструктор, ItemToSale принимающую параметрами (size, type, color)
//  и содержащую метод для ведения статистики продаж saveToSatatistics.
​
// let statstics = {
//     soldGenaral: 0,
//     soldTshirts: 0,
//     soldJackets: 0
// }
​
// const unitToSale = function(size, type, color) {
//     this.size = size;
//     this.type = type;
//     this.color = color;
//     this.saveToSatatistics = function(obj) {
//         obj.soldGenaral +=1;
//        this.type === "tshirt" ? obj.soldTshirts +=1 : obj.soldJackets+=1;
//         console.log(`sold ${this.type}, size: ${this.size}, color: ${this.color}`)
//         console.log(obj);
//     }
​
// }
​
// let tShirt = new unitToSale('s', 'tshirt', 'navi');
// let jacket = new unitToSale('m', 'jacket', 'white');
​
// tShirt.saveToSatatistics(statstics);
// tShirt.saveToSatatistics(statstics);
​
// jacket.saveToSatatistics(statstics)
​
//__________________
​
// Напишите ф-цию конструктор, которая будет создавать избирателя (name);
// У избирателя будет метод vote(presidentName) который будет менят глобальный объект
//  статистики голосов и добавлять туда ключ (имя избирателя) и значение (имя президента).
// Один избиратель голосует только один раз(!)
// В конце подсчитайте голоса и определите кто выиграл выборы
